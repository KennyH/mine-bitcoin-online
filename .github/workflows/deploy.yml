name: Deploy Terraform to AWS

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev # maps to main branch
          - prod # maps to prod branch

jobs:
  terraform:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    env:
      TF_VAR_environment: ${{ inputs.environment }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/mine-bitcoin-online-github-actions-${{ inputs.environment }}-role
          aws-region: us-west-2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.4

      - name: Terraform Init
        working-directory: terraform/${{ inputs.environment }}
        run: terraform init

      - name: Terraform Plan
        working-directory: terraform/${{ inputs.environment }}
        run: terraform plan

      - name: Terraform Apply
        working-directory: terraform/${{ inputs.environment }}
        run: terraform apply -auto-approve

  deploy-nextjs:
    runs-on: ubuntu-latest
    needs: terraform

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/mine-bitcoin-online-github-actions-${{ inputs.environment }}-role
          aws-region: us-west-2

      - name: Setup Node.js (Latest LTS)
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install dependencies
        working-directory: src/website
        run: npm ci

      - name: Build Next.js static site
        working-directory: src/website
        run: npm run build

      - name: Deploy to S3 bucket
        run: |
          aws s3 sync ./src/website/out s3://mine-bitcoin-online-frontend-${{ inputs.environment }} --delete

      - name: Invalidate CloudFront Distribution
        run: |
          DISTRIBUTION_ID=$(aws cloudfront list-distributions \
            --query "DistributionList.Items[?Origins.Items[?contains(DomainName, 'mine-bitcoin-online-frontend-${{ inputs.environment }}')]].Id | [0]" \
            --output text)

          aws cloudfront create-invalidation --distribution-id "$DISTRIBUTION_ID" --paths "/*"